&НаСервереБезКонтекста
Процедура ПоместитьXMLВоВременноеХранилище(ОбъектXDTO, АдресВХ = Неопределено)
	
	Поток			 = Новый ПотокВПамяти ;
	ЗаписьХМЛ		 = Новый ЗаписьXML;
	ЗаписьХМЛ.Отступ = Истина;
	ПараметрыЗаписи  = Новый ПараметрыЗаписиXML("UTF-8", , Истина, Ложь, "    ");
	ЗаписьХМЛ.ОткрытьПоток(Поток, ПараметрыЗаписи);
	ФабрикаXDTO.ЗаписатьXML(ЗаписьХМЛ, ОбъектXDTO, , , , НазначениеТипаXML.Явное);
	ЗаписьХМЛ.Закрыть();
	
	АдресВХ = ПоместитьВоВременноеХранилище(Поток.ЗакрытьИПолучитьДвоичныеДанные());
	
КонецПроцедуры	


&НаСервере
Функция ПоместитьОбъектXDTOвВХ()
	
	КореньТип = ФабрикаXDTO.Тип("http://www.sample-package.org", "Корень");
	Корень = ФабрикаXDTO.Создать(КореньТип);
	СвойствоТип = ФабрикаXDTO.Тип("http://www.sample-package.org", "Свойство");
	Свойство = ФабрикаXDTO.Создать(СвойствоТип);
	
	//Свойство.Свойство1 = 1;
	Свойство.Свойство2 = "Строка1";
	Свойство.Свойство3 = ТекущаяДата();
	//Свойство.Свойство4 = "Строка2";
	Свойство.Свойство5 = 2;
	
	Корень.Свойство = Свойство;
	
	АдресВХ = Неопределено;
	ПоместитьXMLВоВременноеХранилище(Корень, АдресВХ);
	
	Возврат АдресВХ;
	
КонецФункции

&НаКлиенте
Процедура СоздатьФайл(Команда)
	
	АдресВХ = ПоместитьОбъектXDTOвВХ();
	
	ДД = ПолучитьИзВременногоХранилища(АдресВХ);
	ДД.Записать("D:\Тест.xml");
	
	
КонецПроцедуры

#Область ЧтениеФайлаНаКлиенте

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИмяРеквизита = ПолучитьИмяРеквизитаНаСервере(Элемент.Имя);
	
	ПроверитьРаботуРасширенияРаботыСФайлами(ИмяРеквизита);	
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНаКлиентДляСервераНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИмяРеквизита = ПолучитьИмяРеквизитаНаСервере(Элемент.Имя);
	
	ПроверитьРаботуРасширенияРаботыСФайлами(ИмяРеквизита);	
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузитьФайлСКлиентаНаСерверИнтерактивно

&НаКлиенте
Процедура ПрочитатьФайл(Команда)

	// До этого вызов диалога выбора файла и установка расширения браузера
	// Для веб-клиента
	#Если ВебКлиент Тогда
		// Создаем массив с описанием передаваемых файлов
		ПомещаемыеФайлы = Новый Массив;
		ПомещаемыеФайлы.Добавить(Новый ОписаниеПередаваемогоФайла(ПутьКФайлу, ""));
		
		// Передаем файлы на сервер синхронно
		// Подготавливаем массив для помещения результатов
		//ПомещенныеФайлы = Новый Массив;
		//Если НЕ Поместитьфайлы(Помещаемыефайлы, ПомещенныеФайлы, Ложь, УникальныйИдентификатор) Тогда
		//	Сообщить("0шибка прикрепления файла: " + ОписаниеОшибки());
		//Иначе
		//	//Вызываем серверный метод для обработки данных файлов на серверной стороне
		//	ПрикрепитьФайлНаСервер(ПомещенныеФайлы, Истина);
		//КонецЕсли;
		
		// Передаем файлы на сервер асинхронно				
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПослеПомещенияФайлов", ЭтотОбъект);	
		НачатьПомещениеФайлов(ОписаниеОповещения, Помещаемыефайлы, , Ложь, УникальныйИдентификатор);
		
		// Для тонкого клиента
	#Иначе		
		// Получаем двоичные данные файла
		ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКФайлу);
		// Передаем данные файла на сервер для записи в базу данных
		ПрикрепитьФайлНаСервер(ДвоичныеДанные);
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область Служебные

&НаСервере
Функция ПолучитьИмяРеквизитаНаСервере(ЭлементИмя)
	
	ИмяРеквизита = "";
	
	МассивПутьКДанным = СтрРазделить(Элементы[ЭлементИмя].ПутьКДанным, ".");
	
	Для Каждого Элемент Из МассивПутьКДанным Цикл
		
		ИмяРеквизита = Элемент;
		
	КонецЦикла;
	
	Возврат ИмяРеквизита;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура СообщитьПользователю(ТекстСообщения, КлючДанных, Поле, ПутьКДанным)
	
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст			= ТекстСообщения;
	Сообщение.КлючДанных	= КлючДанных;
	Сообщение.Поле			= Поле;
	Сообщение.ПутьКДанным	= ПутьКДанным;
	Сообщение.Сообщить();
	
КонецПроцедуры

#КонецОбласти

#Область ВыбораФайла

&НаКлиенте
Процедура ПроверитьРаботуРасширенияРаботыСФайлами(ДополнительныеПараметры)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПодключенияРасширенияРаботыСФайлами", ЭтотОбъект, ДополнительныеПараметры); 
	
	НачатьПодключениеРасширенияРаботыСФайлами(ОписаниеОповещения);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодключенияРасширенияРаботыСФайлами(Подключено, ДополнительныеПараметры) Экспорт
	
	Если Подключено Тогда
		
		ВыборФайла(ДополнительныеПараметры, Истина, "xml");
		
	Иначе
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеУстановкиРасширенияРаботыСФайлами", ЭтотОбъект, ДополнительныеПараметры); 
	
		НачатьУстановкуРасширенияРаботыСФайлами(ОписаниеОповещения);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеУстановкиРасширенияРаботыСФайлами(ДополнительныеПараметры) Экспорт
	
	ПроверитьРаботуРасширенияРаботыСФайлами(ДополнительныеПараметры);	
		
КонецПроцедуры

// Открывает диалог выбора файла.
//
// Параметры:
//  Элемент                - Элемент управления, для которого выбираем файл.
//  ПроверятьСуществование - Если Истина, то выбор отменяется если файл не существует.
// 
&НаКлиенте
Процедура ВыборФайла(ИмяРеквизита, ПроверятьСуществование, Знач РасширениеПоУмолчанию = "xml")
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПослеВыбораФайла", ЭтотОбъект, ИмяРеквизита); 
		
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);

	ДиалогВыбораФайла.Фильтр						= ПолучитьФильтрДиалогаВыбораФайла();
	ДиалогВыбораФайла.Расширение					= РасширениеПоУмолчанию;
	ДиалогВыбораФайла.Заголовок						= НСтр("ru = 'Выберите файл'");
	ДиалогВыбораФайла.ПредварительныйПросмотр		= Ложь;
	ДиалогВыбораФайла.ИндексФильтра					= 0;
	ДиалогВыбораФайла.ПолноеИмяФайла				= ЭтотОбъект[ИмяРеквизита];
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла	= ПроверятьСуществование;
	ДиалогВыбораФайла.МножественныйВыбор			= Ложь;
	
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьФильтрДиалогаВыбораФайла()
	
	Фильтр = "Файл XML (*.xml)|*.xml";

	Возврат Фильтр;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьПослеВыбораФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		
		Для Каждого ВыбраныйФайл Из ВыбранныеФайлы Цикл
			
			ЭтотОбъект[ДополнительныеПараметры] = ВыбраныйФайл;
			
			
		КонецЦикла;
	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеПомещенияФайлов(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПомещенныеФайлы <> Неопределено Тогда
		
		ПрикрепитьФайлНаСервер(ПомещенныеФайлы, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрикрепитьФайлНаСервер(Данные, ЭтоВебКлиент = Ложь)
	
	// Если процедура была вызвана со стороны веб-клиента, то сначала необходимо получить двоичные данные из временного хранилища значений
	Если ЭтоВебКлиент Тогда
		АдресПрикрепленныйФайл = Данные[0].Хранение;
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресПрикрепленныйФайл);
	Иначе
		// Двоичные данные файла, переданные с клиента
		ДвоичныеДанные = Данные;
	КонецЕсли;
	
	// Ваш код по обработке данных
	// Например, прочитаем двоичные данные файла на сервере и выведем его текстовое содержимое
	
	ЧтениеДанных = Новый ЧтениеДанных(ДвоичныеДанные, КодировкаТекста.UTF8);
	
	Результат = "Прочитаем двоичные данные файла на сервере и выведем его текстовое содержимое: " + Символы.ПС + ЧтениеДанных.ПрочитатьСимволы(, КодировкаТекста.Системная);
	
	ЧтениеДанных.Закрыть();
	
КонецПроцедуры

#КонецОбласти